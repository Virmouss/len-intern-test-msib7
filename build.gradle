plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.2'
    id 'io.spring.dependency-management' version '1.1.6'
    id 'com.google.protobuf' version '0.8.18'
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.postgresql:postgresql:42.6.0'
    implementation 'io.grpc:grpc-netty-shaded:1.50.0'
    implementation 'io.grpc:grpc-protobuf:1.50.0'
    implementation 'io.grpc:grpc-stub:1.50.0'
    implementation 'com.google.protobuf:protobuf-java:3.21.6'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'org.hibernate.orm:hibernate-core:6.2.5.Final' 
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    // Test dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.grpc:grpc-testing:1.50.0'
    testImplementation 'org.mockito:mockito-core:5.2.0'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.3'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.3'

    // Optional: Uncomment if you need to customize JUnit platform execution
    // testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

protobuf {
    protoc {
        artifact = "com.google.protobuf:protoc:3.21.6"
    }
    plugins {
        grpc {
            artifact = "io.grpc:protoc-gen-grpc-java:1.50.0"
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc {}
            }
        }
    }
}

sourceSets {
    main {
        proto {
            srcDir 'src/main/proto'
        }
        java {
            srcDir 'build/generated/source/proto/main/grpc'
            srcDir 'build/generated/source/proto/main/java'
        }
    }
}

tasks.processResources {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

tasks.named('test') {
    useJUnitPlatform()
}
